<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiji.dao.ServiceContentMapper" >
  <resultMap id="BaseResultMap" type="com.qiji.domain.ServiceContent" >
    <result column="content_id" property="contentId" jdbcType="BIGINT" />
    <result column="content_server_id" property="contentServerId" jdbcType="BIGINT" />
    <result column="content_config_id" property="contentConfigId" jdbcType="BIGINT" />
    <result column="content_value" property="contentValue" jdbcType="VARCHAR" />
    <result column="config_id" property="configId" jdbcType="BIGINT" />
    <result column="config_name" property="configName" jdbcType="VARCHAR" />
    <result column="config_formtype" property="configFormtype" jdbcType="INTEGER" />
    <result column="config_sort" property="configSort" jdbcType="BIGINT" />
    <result column="config_category_id" property="configCategoryId" jdbcType="BIGINT" />
    <result column="config_show" property="configShow" jdbcType="INTEGER" />
    <result column="config_intro" property="configIntro" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="com.qiji.domain.ServiceContent" >
    insert into v_service_content (content_id, content_server_id, content_config_id, 
      content_value, config_id, config_name, 
      config_formtype, config_sort, config_category_id, 
      config_show, config_intro)
    values (#{contentId,jdbcType=BIGINT}, #{contentServerId,jdbcType=BIGINT}, #{contentConfigId,jdbcType=BIGINT}, 
      #{contentValue,jdbcType=VARCHAR}, #{configId,jdbcType=BIGINT}, #{configName,jdbcType=VARCHAR}, 
      #{configFormtype,jdbcType=INTEGER}, #{configSort,jdbcType=BIGINT}, #{configCategoryId,jdbcType=BIGINT}, 
      #{configShow,jdbcType=INTEGER}, #{configIntro,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiji.domain.ServiceContent" >
    insert into v_service_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="contentServerId != null" >
        content_server_id,
      </if>
      <if test="contentConfigId != null" >
        content_config_id,
      </if>
      <if test="contentValue != null" >
        content_value,
      </if>
      <if test="configId != null" >
        config_id,
      </if>
      <if test="configName != null" >
        config_name,
      </if>
      <if test="configFormtype != null" >
        config_formtype,
      </if>
      <if test="configSort != null" >
        config_sort,
      </if>
      <if test="configCategoryId != null" >
        config_category_id,
      </if>
      <if test="configShow != null" >
        config_show,
      </if>
      <if test="configIntro != null" >
        config_intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contentId != null" >
        #{contentId,jdbcType=BIGINT},
      </if>
      <if test="contentServerId != null" >
        #{contentServerId,jdbcType=BIGINT},
      </if>
      <if test="contentConfigId != null" >
        #{contentConfigId,jdbcType=BIGINT},
      </if>
      <if test="contentValue != null" >
        #{contentValue,jdbcType=VARCHAR},
      </if>
      <if test="configId != null" >
        #{configId,jdbcType=BIGINT},
      </if>
      <if test="configName != null" >
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configFormtype != null" >
        #{configFormtype,jdbcType=INTEGER},
      </if>
      <if test="configSort != null" >
        #{configSort,jdbcType=BIGINT},
      </if>
      <if test="configCategoryId != null" >
        #{configCategoryId,jdbcType=BIGINT},
      </if>
      <if test="configShow != null" >
        #{configShow,jdbcType=INTEGER},
      </if>
      <if test="configIntro != null" >
        #{configIntro,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="getServiceContentByIds" resultMap="BaseResultMap">
  	select * from v_service_content where content_server_id in
  		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}       
        </foreach>  
  </select>
  
  <select id="getServiceContentByServiceId" resultMap="BaseResultMap">
  	select * from v_service_content where content_server_id = #{service_id}
  </select>
</mapper>